# Register
method : Post   path : /auth/register
Request Body : firstname ,lastname , email or mobile ,password , confirmpassword
Response : 
success= status 201  => object { accessToken: String  ,userdata }
error = status 400 { message : String , emailOrMobileExist : true }
serverError = status 500 { message : String}

# Login
method : POST  path :/auth/login
Request Body : emailOrMobile,password
Response :
success = status 200 => object { id : Number , findFirst: String , lastName : String}
error = status 400 {message : String}
serverError = status 500 { message : String}

# Get Authenticated user
method : GET path : /auth/me
Request Header : Authorization Bearer ACCESS_TOKEN 
Response : 
success => status 200 => object user { id : Number , findFirst: String , lastName : String}
error = status 401 {message : String}
serverError = status 500 { message : String}

# Update profile/cover image
method : PATH path : /user
Request Header : Authorization Bearer ACCESS_TOKEN 
Request Body : profileImage? , coverImage?
Response :
success => status 200 { profileImage?: String ,coverImage?: String }
error => status 400,401 { message }
serverError = status 500 { message }

# GET user profile by id 
method : get  path : /user/:userid
Request Header : Authorization Bearer ACCESS_TOKEN 
Response :
success => status 200 
     {
     user :{ id :Number , firstName : String ....} , 
     status ,friend ,
     friend : [{ id :Number,firstName : String ....}]
     }
error => status 401 { message : String}
serverError => status 500 { message : String}

# Request Friend
method : POST path : /friend/:receiverId
Request Header : Authorization Bearer ACCESS_TOKEN 
Response :
success => status 200 {message : String}
error => status 400,401 {message : String}
serverError => status 500 {message : String}

REJECT REQUEST FRIEND
# Delete friend
method : DELETE path : /friend/:requesterId/reject
Request Header : Authorization Bearer ACCESS_TOKEN 
Response :
success => status 200 {message : String}
error => status 400,401 {message : String}
serverError => status 500 {message : String}

CANCEL REQUEST 
method : DELETE path : /friend/:requesterId/cancel
Request Header : Authorization Bearer ACCESS_TOKEN 
Response :
success => status 200 {message : String}
error => status 400,401 {message : String}
serverError => status 500 {message : String}

UNFRIEND
method : DELETE path : /friend/:requesterId/unfriend
Request Header : Authorization Bearer ACCESS_TOKEN 
Response :
success => status 200 {message : String}
error => status 400,401 {message : String}
serverError => status 500 {message : String}

# Access friend
method : PATCH  path : /friend/:requesterId
Request Header : Authorization Bearer ACCESS_TOKEN 
Response :
success => status 200 {message : String}
error => status 400,401 {message : String}
serverError => status 500 {message : String}

# Create post
method : POST  path : /post
Request Header : Authorization Bearer ACCESS_TOKEN 
BODY : message? , image?
Response :
success => status 200 {message : String}
error => status 400,401 {message : String}
serverError => status 500 {message : String}